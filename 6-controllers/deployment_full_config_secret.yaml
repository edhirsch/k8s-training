---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-app
  namespace: default
spec:
  replicas: 3
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: sails
      tier: backend
  template:
    metadata:
      labels:
        app: sails
        tier: backend
    spec:
      initContainers:
      - name: wait-mongo
        image: busybox
        command: [ 'sh', '-c', "until nc -vz -w 1 $MONGO_SERVICE_HOST $MONGO_SERVICE_PORT; do echo Waiting for mongo database to be available..; sleep 0.5; done" ]
      containers:
      - name: message-app
        image: messageapp:0.1
        command:
        - sails
        args:
        - lift
        env:
        - name: MONGO_USER
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: mongo.username
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-config
              key: mongo.password
        - name: MONGO_HOST
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: mongo.hostname
        - name: MONGO_PORT
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: mongo.port
        - name: MONGO_DB
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: mongo.database
        ports:
        - containerPort: 1337
          protocol: TCP
          name: sails-port
        readinessProbe:
          tcpSocket:
            port: sails-port
          initialDelaySeconds: 1
          periodSeconds: 5
          timeoutSeconds: 5
        livenessProbe:
          tcpSocket:
            port: sails-port
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 10
      restartPolicy: Always
      terminationGracePeriodSeconds: 5
